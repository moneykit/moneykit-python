# coding: utf-8

"""
MoneyKit API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 0.1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from moneykit.models.account_with_account_numbers import AccountWithAccountNumbers


class TestAccountWithAccountNumbers(unittest.TestCase):
    """AccountWithAccountNumbers unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountWithAccountNumbers:
        """Test AccountWithAccountNumbers
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `AccountWithAccountNumbers`
        """
        model = AccountWithAccountNumbers()
        if include_optional:
            return AccountWithAccountNumbers(
                account_id = 'acc_6Tef269B6ZArSVpYrxtjBV',
                account_type = 'depository.checking',
                name = 'Premier Checking',
                account_mask = '3748',
                balances = moneykit.models.account_balances.AccountBalances(
                    currency = USD, 
                    available = 340.12, 
                    current = 445.89, 
                    limit = 500, ),
                numbers = moneykit.models.account_numbers.AccountNumbers(
                    ach = [
                        moneykit.models.ach_number.AchNumber(
                            account_number = '', 
                            routing_number = '', 
                            wire_routing_number = '', )
                        ], 
                    bacs = [
                        moneykit.models.bacs_number.BacsNumber(
                            account_number = '', 
                            sort_code = '', )
                        ], 
                    eft = [
                        moneykit.models.eft_number.EftNumber(
                            account_number = '', 
                            institution_number = '', 
                            branch_number = '', )
                        ], 
                    international = [
                        moneykit.models.international_number.InternationalNumber(
                            iban = '', 
                            bic = '', )
                        ], )
            )
        else:
            return AccountWithAccountNumbers(
                account_id = 'acc_6Tef269B6ZArSVpYrxtjBV',
                account_type = 'depository.checking',
                name = 'Premier Checking',
                balances = moneykit.models.account_balances.AccountBalances(
                    currency = USD, 
                    available = 340.12, 
                    current = 445.89, 
                    limit = 500, ),
                numbers = moneykit.models.account_numbers.AccountNumbers(
                    ach = [
                        moneykit.models.ach_number.AchNumber(
                            account_number = '', 
                            routing_number = '', 
                            wire_routing_number = '', )
                        ], 
                    bacs = [
                        moneykit.models.bacs_number.BacsNumber(
                            account_number = '', 
                            sort_code = '', )
                        ], 
                    eft = [
                        moneykit.models.eft_number.EftNumber(
                            account_number = '', 
                            institution_number = '', 
                            branch_number = '', )
                        ], 
                    international = [
                        moneykit.models.international_number.InternationalNumber(
                            iban = '', 
                            bic = '', )
                        ], ),
        )
        """

    def testAccountWithAccountNumbers(self):
        """Test AccountWithAccountNumbers"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
