# coding: utf-8

"""
    MoneyKit API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2023-02-18
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from moneykit.models.response401_get_account_numbers_legacy20230218_links_id_accounts_numbers_get import (
    Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet,
)


class TestResponse401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet(
    unittest.TestCase
):
    """Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet:
        """Test Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet`
        """
        model = Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet()
        if include_optional:
            return Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet(
                error_code = link_error.unauthorized_access,
                error_message = None,
                documentation_url = None
            )
        else:
            return Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet(
                error_message = None,
        )
        """

    def testResponse401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet(self):
        """Test Response401GetAccountNumbersLegacy20230218LinksIdAccountsNumbersGet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
