# coding: utf-8

"""
    MoneyKit API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2023-02-18
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from moneykit.models.get_investment_transactions_response import (
    GetInvestmentTransactionsResponse,
)


class TestGetInvestmentTransactionsResponse(unittest.TestCase):
    """GetInvestmentTransactionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetInvestmentTransactionsResponse:
        """Test GetInvestmentTransactionsResponse
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetInvestmentTransactionsResponse`
        """
        model = GetInvestmentTransactionsResponse()
        if include_optional:
            return GetInvestmentTransactionsResponse(
                total = 82,
                page = 1,
                size = 50,
                investment_transactions = [
                    moneykit.models.investment_transaction_response.InvestmentTransactionResponse(
                        id = 'it_R73abx78zoa2NxyAlki90g', 
                        account_id = 'acc_6Tef269B6ZArSVpYrxtjBV', 
                        amount = '987.15', 
                        date = '2023-02-16T00:00:00', 
                        datetime = '2023-02-16T09:14:11', 
                        description = 'Bought MSFT', 
                        type = 'buy', 
                        fees = '5.95', 
                        forex_rate = '', 
                        price = '98.12', 
                        quantity = '10', 
                        security_id = 'sec_bb6fi893jxdfNxyAjnb784', )
                    ],
                securities = [
                    moneykit.models.security_response.SecurityResponse(
                        id = 'sec_bb6fi893jxdfNxyAjnb784', 
                        name = 'Microsoft', 
                        type = 'equity', 
                        currency = 'USD', 
                        ticker = 'MSFT', 
                        isin = 'US5949181045', 
                        sedol = '', 
                        close_price = '98.12', 
                        close_date = '2022-02-08', )
                    ],
                accounts = [
                    moneykit.models.account.Account(
                        account_id = 'acc_6Tef269B6ZArSVpYrxtjBV', 
                        account_type = 'depository.checking', 
                        name = 'Premier Checking', 
                        account_mask = '3748', 
                        balances = null, )
                    ],
                link = {link_id=mk_eqkWN34UEoa2NxyALG8pcV, institution_id=chase, institution_name=Chase, provider=mx, state=connected, last_synced_at=2023-02-16T09:14:11, tags=[user_type:admin], products={accounts={refreshed_at=2023-02-16T09:14:11, last_attempted_at=2023-02-16T09:14:11}, identity={refreshed_at=2023-02-16T09:14:11, last_attempted_at=2023-02-16T09:14:11, settings={required=true, prefetch=false}}}}
            )
        else:
            return GetInvestmentTransactionsResponse(
                total = 82,
                page = 1,
                size = 50,
                investment_transactions = [
                    moneykit.models.investment_transaction_response.InvestmentTransactionResponse(
                        id = 'it_R73abx78zoa2NxyAlki90g', 
                        account_id = 'acc_6Tef269B6ZArSVpYrxtjBV', 
                        amount = '987.15', 
                        date = '2023-02-16T00:00:00', 
                        datetime = '2023-02-16T09:14:11', 
                        description = 'Bought MSFT', 
                        type = 'buy', 
                        fees = '5.95', 
                        forex_rate = '', 
                        price = '98.12', 
                        quantity = '10', 
                        security_id = 'sec_bb6fi893jxdfNxyAjnb784', )
                    ],
                securities = [
                    moneykit.models.security_response.SecurityResponse(
                        id = 'sec_bb6fi893jxdfNxyAjnb784', 
                        name = 'Microsoft', 
                        type = 'equity', 
                        currency = 'USD', 
                        ticker = 'MSFT', 
                        isin = 'US5949181045', 
                        sedol = '', 
                        close_price = '98.12', 
                        close_date = '2022-02-08', )
                    ],
                accounts = [
                    moneykit.models.account.Account(
                        account_id = 'acc_6Tef269B6ZArSVpYrxtjBV', 
                        account_type = 'depository.checking', 
                        name = 'Premier Checking', 
                        account_mask = '3748', 
                        balances = null, )
                    ],
                link = {link_id=mk_eqkWN34UEoa2NxyALG8pcV, institution_id=chase, institution_name=Chase, provider=mx, state=connected, last_synced_at=2023-02-16T09:14:11, tags=[user_type:admin], products={accounts={refreshed_at=2023-02-16T09:14:11, last_attempted_at=2023-02-16T09:14:11}, identity={refreshed_at=2023-02-16T09:14:11, last_attempted_at=2023-02-16T09:14:11, settings={required=true, prefetch=false}}}},
        )
        """

    def testGetInvestmentTransactionsResponse(self):
        """Test GetInvestmentTransactionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
